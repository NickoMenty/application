// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  firstName  String
  lastName   String
  password   String
  address    Bytes     @db.ByteA
  mnemonic   String
  privateKey Bytes     @db.ByteA
  balance    String    @default("0")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?

  items         Item[]     @relation(name: "UserItems")
  purchases     Item[]     @relation(name: "UserPurchases")
  sellTransfers Transfer[] @relation(name: "sellTransfers")
  butTransfers  Transfer[] @relation(name: "butTransfers")
}

model Item {
  id          Int       @id @default(autoincrement())
  title       String
  price       Float
  description String
  userId      Int
  customerId  Int?
  contractId  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  user      User          @relation(name: "UserItems", fields: [userId], references: [id])
  customer  User?         @relation(name: "UserPurchases", fields: [customerId], references: [id])
  files     File[]        @relation(name: "ItemFile")
  transfers Transfer[]
  contract  ItemContract? @relation(name: "ItemContract", fields: [contractId], references: [id])
}

model File {
  id        Int      @id @default(autoincrement())
  path      String
  entity    String
  entityId  Int
  createdAt DateTime @default(now())

  item Item? @relation(name: "ItemFile", fields: [entityId], references: [id], map: "item_entityId")
}

model ContractEvent {
  id             Int    @id @default(autoincrement())
  address        String
  blockNumber    Int
  txHash         String
  txIndex        Int
  logIndex       Int
  event          String
  eventSignature String
  state          Int
  args           String
}

model Transfer {
  id        Int      @id @default(autoincrement())
  from      Int
  to        Int
  itemId    Int
  amount    String
  createdAt DateTime @default(now())

  seller User @relation(name: "sellTransfers", fields: [from], references: [id])
  buyer  User @relation(name: "butTransfers", fields: [to], references: [id])
  item   Item @relation(fields: [itemId], references: [id])
}

model ItemContract {
  id        String   @id
  data      String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  item Item[] @relation(name: "ItemContract")
}
